import { defineStore } from "pinia";

export const useUserInterfaceStore = defineStore("userInterface", {
  state: () => ({
    models: {
      BloodTimeVaryingElastance: {
        properties: [
          {
            modelProp: "Vol",
            typeProp: "numeric",
            caption: "volume",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            modelProp: "UVol",
            caption: "UVol",
            typeProp: "numeric",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "ElMin",
            modelProp: "ElMin",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "ElMax",
            modelProp: "ElMax",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "ElK",
            modelProp: "ElK",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
        ],
      },
      BloodCompliance: {
        properties: [
          {
            modelProp: "Vol",
            typeProp: "numeric",
            caption: "volume",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            modelProp: "UVol",
            caption: "UVol",
            typeProp: "numeric",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "ElBase",
            modelProp: "ElBase",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "ElK",
            modelProp: "ElK",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
        ],
      },
      BloodResistor: {
        properties: [
          {
            caption: "RFor",
            modelProp: "RFor",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "RBack",
            modelProp: "RBack",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Rk",
            modelProp: "Rk",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
          {
            caption: "NoFlow",
            modelProp: "NoFlow",
            typeProp: "boolean",
          },
          {
            caption: "NoBackFlow",
            modelProp: "NoBackFlow",
            typeProp: "boolean",
          },
          {
            caption: "from",
            modelProp: "CompFrom",
            typeProp: "list",
            optionalModels: ["BloodCompliance", "BloodTimeVaryingElastance"],
          },
          {
            caption: "to",
            modelProp: "CompTo",
            typeProp: "list",
            optionalModels: ["BloodCompliance", "BloodTimeVaryingElastance"],
          },
        ],
      },
      GasCompliance: {
        properties: [
          {
            modelProp: "Vol",
            typeProp: "numeric",
            caption: "volume",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            modelProp: "UVol",
            caption: "UVol",
            typeProp: "numeric",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "ElBase",
            modelProp: "ElBase",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "ElK",
            modelProp: "ElK",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
        ],
      },
      Container: {
        properties: [
          {
            modelProp: "Vol",
            typeProp: "numeric",
            caption: "volume",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            modelProp: "UVol",
            caption: "UVol",
            typeProp: "numeric",
            unit: "mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "ElBase",
            modelProp: "ElBase",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "ElK",
            modelProp: "ElK",
            typeProp: "numeric",
            unit: "mmHg/mL",
            min: 0.0,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
          {
            caption: "contained models",
            modelProp: "ContainedModels",
            typeProp: "multilist",
            optionalModels: [
              "BloodCompliance",
              "BloodTimeVaryingElastance",
              "GasCompliance",
              "Container",
            ],
          },
        ],
      },
      GasResistor: {
        properties: [
          {
            caption: "RFor",
            modelProp: "RFor",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "RBack",
            modelProp: "RBack",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Rk",
            modelProp: "Rk",
            typeProp: "numeric",
            unit: "mL/mmHg*s",
            min: 0.001,
            step: 0.1,
            displayFactor: 0.001,
          },
          {
            caption: "Enabled",
            modelProp: "IsEnabled",
            typeProp: "boolean",
          },
          {
            caption: "NoFlow",
            modelProp: "NoFlow",
            typeProp: "boolean",
          },
          {
            caption: "NoBackFlow",
            modelProp: "NoBackFlow",
            typeProp: "boolean",
          },
          {
            caption: "from",
            modelProp: "CompFrom",
            typeProp: "list",
            optionalModels: ["GasCompliance"],
          },
          {
            caption: "to",
            modelProp: "CompTo",
            typeProp: "list",
            optionalModels: ["GasCompliance"],
          },
        ],
      },
      GasExchanger: {
        properties: [
          {
            caption: "DifO2",
            modelProp: "DifO2",
            typeProp: "numeric",
            unit: "mmol/mmHg",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "DifCo2",
            modelProp: "DifCo2",
            typeProp: "numeric",
            unit: "mmol/mmHg",
            min: 0.0,
            step: 0.1,
            displayFactor: 1000.0,
          },
          {
            caption: "Gas",
            modelProp: "CompGas",
            typeProp: "list",
            optionalModels: ["GasCompliance"],
          },
          {
            caption: "Blood",
            modelProp: "CompBlood",
            typeProp: "list",
            optionalModels: ["BloodCompliance", "BloodTimeVaryingElastance"],
          },
        ],
      },
    },
    charts: {
      bloodFlowProbe: {
        enabled: true,
        collapsed: true,
        title: "FLOW PROBE",
        model_types: [],
        model_props: [],
      },
      bloodPressureProbe: {
        enabled: true,
        collapsed: true,
        title: "PRESSURE PROBE",
        model_types: [],
        model_props: [],
      },
    },
    monitors: {
      heartMonitoring: {
        enabled: false,
        collapsed: true,
        title: "HEART",
        parameters: [],
      },
      hemodynamicMonitoring: {
        enabled: false,
        collapsed: true,
        title: "HEMODYNAMICS",
        parameters: [],
      },
      respirationMonitoring: {
        enabled: false,
        collapsed: true,
        title: "RESPIRATION",
        parameters: [],
      },
      lungChestwallMonitoring: {
        enabled: false,
        collapsed: true,
        title: "LUNG AND CHESTWALL",
        parameters: [],
      },
      acidbaseAndOxyMonitoring: {
        enabled: true,
        collapsed: true,
        title: "ACIDBASE AND OXYGENATION",
        parameters: [
          {
            model: "AA",
            prop: "Ph",
            label: "Ph",
            unit: "",
            value: 7.43,
            rounding: 2,
          },
          {
            model: "AA",
            prop: "Pco2",
            label: "Pco2",
            unit: "mmHg",
            value: 45,
            rounding: 0,
          },
          {
            model: "AA",
            prop: "Hco3",
            label: "Hco3",
            unit: "mmol/l",
            value: 23.1,
            rounding: 1,
          },
          {
            model: "AA",
            prop: "Po2",
            label: "Po2",
            unit: "mmHg",
            value: 100,
            rounding: 0,
          },
          {
            model: "AA",
            prop: "So2",
            label: "So2",
            unit: "%",
            value: 97,
            rounding: 0,
          },
        ],
      },
      ecmoMonitoring: {
        enabled: false,
        collapsed: true,
        title: "ECMO",
        parameters: [
          {
            model: "LV_AA",
            prop: "Flow",
            label: "Flow",
            unit: "l/min",
            value: 250,
            rounding: 0,
          },
        ],
      },
      drugMonitoring: {
        enabled: false,
        collapsed: true,
        title: "DRUGS",
        parameters: [],
      },
      kidneyMonitoring: {
        enabled: false,
        collapsed: true,
        title: "KIDNEYS",
        parameters: [],
      },
      artificialWhombMonitoring: {
        enabled: false,
        collapsed: true,
        title: "ARTIFICIAL WHOMB",
        parameters: [],
      },
      brainMonitoring: {
        enabled: false,
        collapsed: true,
        title: "BRAIN",
        parameters: [],
      },
      resuscitationMonitoring: {
        enabled: false,
        collapsed: true,
        title: "RESUSCITATION",
        parameters: [],
      },
      birthMonitoring: {
        enabled: false,
        collapsed: true,
        title: "BIRTH",
        parameters: [],
      },
      ansMonitoring: {
        enabled: false,
        collapsed: true,
        title: "AUTONOMIC NERVOUS SYSTEM",
        parameters: [],
      },
      ventilatorMonitoring: {
        enabled: false,
        collapsed: true,
        title: "MECHANICAL VENTILATOR",
        parameters: [],
      },
    },
  }),

  getters: {},

  actions: {},
});
